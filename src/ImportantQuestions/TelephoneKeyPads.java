package ImportantQuestions;

import java.util.ArrayList;
import java.util.HashMap;

/**
 * Created by vikram on 6/3/17.
 *
 *  Given a finite number, find out all the possible strings that can be generated by using encoding found on old telephone keypad.

 Example: 223 => bad, bae, aae...etc. ( since 2 = abc , 3 = def ... )
 */
public class TelephoneKeyPads {


    public static void main(String[] args) {
        char[] num={'2','2','0'};
        TelephoneKeyPads telephoneKeyPads= new TelephoneKeyPads();
        String str="";
        telephoneKeyPads.generatingKeypads(num,str,num.length,0);

    }

   String[] telephoneMap= {" "," ","ABC","DEF","GHI","JKL","MNO","PQRS","TUV","WXYZ"};

   HashMap<Character,Integer> map;

   // ArrayList<Character> arrayList;

int counter=0;
    public void generatingKeypads(char[] num,String str,int total,int curr)
    {
      if (str.length()==total || curr==total)
      {
          System.out.println(str);

          return;

      }


      for (int i=0;i< telephoneMap[(int)num[curr]-48].length();i++)
      {
          str = str+telephoneMap[(int)num[curr]-48].charAt(i);
          generatingKeypads(num,str,total,curr+1);
          str=str.substring(0,curr);
      }



    }
}
